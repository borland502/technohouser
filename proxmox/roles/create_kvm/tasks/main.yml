---
# cielito.proxmox.create_kvm: creation or clone of a complete virtual machine in a Proxmox VE node

- name: Parameters validation and sanity check
  ansible.builtin.import_tasks: assert.yml
  run_once: true
  delegate_to: localhost

# Asegurarse que se cumplen los requerimientos del módulo community.general.proxmox_kvm
- name: Ensure community.general.proxmox_kvm module's requirements are satisfied
  ansible.builtin.include_tasks: dependencies.yml

# Subir snippet personalizado de cloud-init al nodo
- name: Upload custom cloud-init snippet to node
  ansible.builtin.template:
    src: "{{ pve_kvm_custom_ci_snippet_template_src }}"
    dest: "{{ pve_kvm_custom_ci_snippet_dest }}"
    owner: root
    group: root
    mode: "0644"
  delegate_to: "{{ pve_api_host }}"
  when:
  - pve_kvm_custom_ci_snippet is defined
  - pve_kvm_custom_ci_snippet | length > 0

# Tarea para crear una máquina virtual vacía desde cero
- name: Create an empty VM from scratch
  ansible.builtin.include_tasks: create_kvm.yml
  when: not pve_kvm_clone_from_existing | bool

# Tarea para crear una KVM clonando otra preexistente
- name: Create a KVM by cloning a pre-existing one
  ansible.builtin.include_tasks: clone_kvm.yml
  when: pve_kvm_clone_from_existing | bool

# Extraer el ID de la máquina virtual
- name: Extract the virtual machine ID
  ansible.builtin.shell: |
    set -o pipefail
    qm list | grep -w "{{ pve_hostname }}" | awk '{ print $1 }'
  args:
    executable: /bin/bash
  changed_when: false
  delegate_to: "{{ pve_api_host }}"
  register: pve_kvm_extracted_vmid
  when:
  - pve_kvm_vmid is not defined
  - pve_kvm_clone_newid is not defined
  - pve_kvm_virtual_created is succeeded

# Establecer variable con el ID correspondiente de la máquina virtual creada
- name: Set variable with the corresponding ID of the created virtual machine
  ansible.builtin.set_fact:
    pve_kvm_inferred_vmid: "{{ pve_kvm_clone_newid if(pve_kvm_clone_newid is defined and pve_kvm_clone_from_existing) else ( pve_kvm_vmid if(pve_kvm_vmid is defined) else pve_kvm_extracted_vmid.stdout ) }}"

# Tareas a ejecutar una sola vez para reconfigurar recursos de una VM recién clonada
# One-time tasks to configure resources of a newly cloned VM
- name: Configure resources of a newly cloned VM
  ansible.builtin.include_tasks: post_clone_kvm_configuration.yml
  when:
  - pve_kvm_virtual_created is changed # Controls that the tasks run only once immediately after cloning the VM
  - pve_kvm_clone_from_existing | bool
  - pve_kvm_clone_post_configure | bool

# Asegurarse de que la máquina virtual esté encendida
- name: Ensure the virtual machine is turned on
  block:

  - name: Ensure the virtual machine is turned on | Password
    community.general.proxmox_kvm:
      api_password: "{{ pve_api_password | default(omit) }}"
    notify: pve_kvm wait for SSH connection
    when:
    - pve_kvm_started_after_provision | bool
    - is_password_setup
    - not is_token_setup

  # Asegurarse de que la máquina virtual esté encendida
  - name: Ensure the virtual machine is turned on | Token
    community.general.proxmox_kvm:
      api_token_id: "{{ pve_api_token_id | default(omit) }}"
      api_token_secret: "{{ pve_api_token_secret | default(omit) }}"
    notify: pve_kvm wait for SSH connection
    when:
    - pve_kvm_started_after_provision | bool
    - is_token_setup
    - not is_password_setup

  delegate_to: "{{ pve_api_host }}"
  module_defaults:
    community.general.proxmox_kvm:
      node: "{{ pve_node }}"
      api_host: "{{ pve_api_host }}"
      api_user: "{{ pve_api_user | default(omit) }}"
      vmid: "{{ pve_kvm_inferred_vmid }}"
      state: started

...
